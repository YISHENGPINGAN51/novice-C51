C51 COMPILER V9.54   MAIN                                                                  02/26/2022 14:19:58 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Source\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(..\Li
                    -sting\main.lst) TABS(2) OBJECT(..\Output\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "delay.h"
   3          #include "uart.h"
   4          #include "CRC16.h"
   5          
   6          sbit LED = P1^0;
   7          sbit BEEP = P3^7;
   8          
   9          unsigned int led_data;
  10          unsigned int beep_data;
  11          unsigned int led_cnt;
  12          unsigned int beep_cnt;
  13          
  14          #define LOCAL_ADDRESS 0x01
  15          
  16          void Timer0Init(void);
  17          
  18          void main()
  19          {
  20   1        unsigned char i;
  21   1        unsigned int crc;
  22   1        unsigned char crch, crcl;
  23   1        Timer0Init();
  24   1        UartInit();
  25   1        EA = 1;
  26   1        while (1)
  27   1        {
  28   2          if (recv_flag)
  29   2          {
  30   3            recv_flag = 0;
  31   3            start_timer = 0;//关定时器
  32   3            //校验本机地址，是本机的，则接收处理，否则退出
  33   3            if (recv_buf[0] != LOCAL_ADDRESS)
  34   3            {
  35   4              return;
  36   4            }
  37   3            //CRC16校验，校验正确，我们才处理，否则直接返回，并给出错误码
  38   3            crc = GetCRC16(recv_buf, recv_cnt - 2);
  39   3            crch = crc >> 8;
  40   3            crcl = crc & 0xFF;
  41   3            if ((recv_buf[recv_cnt - 2] != crch) || (recv_buf[recv_cnt - 1] != crcl))
  42   3            {
  43   4              recv_buf[1] = recv_buf[1] | 0x80;
  44   4              crc = GetCRC16(recv_buf, recv_cnt - 2);
  45   4              recv_buf[4] = crc & 0xFF;
  46   4              recv_buf[5] = crc >> 8;
  47   4              for (i = 0; i < recv_cnt; i++)
  48   4              {
  49   5                sendByte(recv_buf[i]);
  50   5              }
  51   4              return;
  52   4            }
  53   3            switch (recv_buf[1])
  54   3            {
C51 COMPILER V9.54   MAIN                                                                  02/26/2022 14:19:58 PAGE 2   

  55   4              case 1:
  56   4                led_data = recv_buf[2];
  57   4                led_data = led_data << 8;
  58   4                led_data = led_data + recv_buf[3];
  59   4                led_cnt = 0;//目的是使LED点亮上述接收的数据的时间
  60   4                break;
  61   4              case 2:
  62   4                beep_data = recv_buf[2];
  63   4                beep_data = beep_data << 8;
  64   4                beep_data = beep_data + recv_buf[3];
  65   4                beep_cnt = beep_data;
  66   4                break;
  67   4              default: break;
  68   4            }
  69   3            //sendString(recv_buf);//处理数据
  70   3            clr_recvbuffer(recv_buf);//清除缓冲buffer
  71   3            recv_cnt = 0;
  72   3          }
  73   2        }
  74   1      }
  75          
  76          void Timer0Init(void)   //1毫秒@11.0592MHz
  77          {
  78   1      //  AUXR &= 0x7F;   //定时器时钟12T模式
  79   1        TMOD &= 0xF0;   //设置定时器模式
  80   1        TMOD |= 0x01;   //设置定时器模式
  81   1        TL0 = 0x66;   //设置定时初值
  82   1        TH0 = 0xFC;   //设置定时初值
  83   1        TF0 = 0;    //清除TF0标志
  84   1        ET0 = 1;
  85   1        TR0 = 1;    //定时器0开始计时
  86   1      }
  87          
  88          void timer0_ISR() interrupt 1
  89          {
  90   1        TR0 = 0;
  91   1        if (1 == start_timer)
  92   1        {
  93   2          recv_timer_cnt++;//1、累加定时时间计数器
  94   2          if (recv_timer_cnt > MAX_REV_TIME)//2、判断定时时间是否超过了设定的最大的阈值，
  95   2                                            //超过则说明等待一段时间后没有新的数据到，
  96   2                                            //我们判断一包数据接收完毕
  97   2          {
  98   3            recv_timer_cnt = 0;//3、清除定时计数器  处理数据  清除buffer（放到数据处理之后）
  99   3            recv_flag = 1;
 100   3          }
 101   2        }
 102   1        if (led_cnt < led_data)
 103   1        {
 104   2          led_cnt++;
 105   2          LED = 0;
 106   2        }
 107   1        else
 108   1        {
 109   2          LED = 1;
 110   2        }
 111   1        if (beep_cnt != 0)
 112   1        {
 113   2          beep_cnt--;
 114   2          BEEP = ~BEEP;
 115   2        }
 116   1        TL0 = 0x66;   //设置定时初值
C51 COMPILER V9.54   MAIN                                                                  02/26/2022 14:19:58 PAGE 3   

 117   1        TH0 = 0xFC;   //设置定时初值
 118   1        TR0 = 1;
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    296    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
