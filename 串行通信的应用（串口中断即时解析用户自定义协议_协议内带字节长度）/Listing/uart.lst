C51 COMPILER V9.54   UART                                                                  02/18/2022 23:59:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\Output\uart.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Source\uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(..\Li
                    -sting\uart.lst) TABS(2) OBJECT(..\Output\uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          unsigned char code recv_correct[] = { 0x55, 0xAA, 0x80, 0x00, 0x80, 0x80 };
   4          unsigned char code sum_check_error[] = { 0x55, 0xAA, 0x81, 0x00, 0x81, 0x81 };
   5          unsigned char code xor_check_error[] = { 0x55, 0xAA, 0x82, 0x00, 0x82, 0x82 };
   6          unsigned char recv_buf[MAX_REV_NUM];
   7          unsigned char recv_cnt;
   8          unsigned char recv_length;
   9          unsigned char recv_flag;
  10          unsigned char machine_step = 0;
  11          
  12          void UartInit(void)   //9600bps@11.0592MHz
  13          {
  14   1        PCON &= 0x7F;   //波特率不倍速
  15   1        SCON = 0x50;    //8位数据,可变波特率  SM0  SM1  SM2  REN  TB8  RB8  TI  RI
  16   1                        //                    0    1    0    1    0    0   0   0
  17   1        TMOD &= 0x0F;   //清除定时器1模式位
  18   1        TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  19   1        TL1 = 0xFD;   //设定定时初值
  20   1        TH1 = 0xFD;   //设定定时器重装值
  21   1        ET1 = 0;    //禁止定时器1中断
  22   1        ES = 1;
  23   1        TR1 = 1;    //启动定时器1
  24   1      }
  25          
  26          void sendByte(unsigned char dat)
  27          {
  28   1        SBUF = dat;
  29   1        while (!TI);
  30   1        TI = 0;
  31   1      }
  32          
  33          void sendString(unsigned char *dat)//Hello World!
  34          {
  35   1        while (*dat != '\0')
  36   1        {
  37   2          sendByte(*dat++);
  38   2        }
  39   1      }
  40          
  41          char putchar(char c)
  42          {
  43   1        sendByte(c);
  44   1        return c;
  45   1      }
  46          
  47          void clr_recvbuffer(unsigned char *buf)
  48          {
  49   1        unsigned char i;
  50   1        for(i = 0; i < MAX_REV_NUM; i++)
  51   1        {
  52   2          buf[i] = 0;
  53   2        }
  54   1      }
C51 COMPILER V9.54   UART                                                                  02/18/2022 23:59:48 PAGE 2   

  55          
  56          /*****************************************************************
  57          1、中断服务函数一定是一个没有返回值的函数
  58          2、中断服务函数一定是没有参数的函数
  59          3、中断服务函数函数名后跟关键字 interrupt
  60          4、interrupt n 0 - 4  5个中断源  8*n + 0003H
  61          0003H INT0    000BH T0    0013H INT1    001BH T1    0023H ES
  62          5、中断服务函数不能被主程序或其他程序所调用
  63          6、n后面跟using m (0 - 3)工作寄存器组
  64          *****************************************************************/
  65          
  66          void uart_ISR() interrupt 4
  67          {
  68   1        unsigned char i;
  69   1        unsigned char recv_data;//接收数据的中间变量
  70   1        static unsigned char sum_check;
  71   1        static unsigned char xor_check;
  72   1        if (RI)
  73   1        {
  74   2          RI = 0;
  75   2          recv_data = SBUF;
  76   2          switch(machine_step)
  77   2          {
  78   3            case 0:
  79   3              if (recv_data == 0x55)
  80   3              {
  81   4                machine_step = 1;
  82   4              }
  83   3              else
  84   3              {
  85   4                machine_step = 0;
  86   4              }
  87   3              break;    
  88   3            case 1:
  89   3              if (recv_data == 0xAA)
  90   3              {
  91   4                machine_step = 2;
  92   4                recv_cnt = 0;
  93   4              }
  94   3              else
  95   3              {
  96   4                machine_step = 0;
  97   4              }
  98   3              break;
  99   3            case 2:
 100   3              //开始和校验  异或校验
 101   3              sum_check = recv_data;
 102   3              xor_check = recv_data;
 103   3              recv_buf[recv_cnt] = recv_data;
 104   3              recv_cnt++;
 105   3              machine_step = 3;
 106   3              break;
 107   3            case 3:
 108   3              sum_check += recv_data;
 109   3              xor_check ^= recv_data;
 110   3              recv_length = recv_data;
 111   3              machine_step = 4;
 112   3              break;
 113   3            case 4:
 114   3              sum_check += recv_data;
 115   3              xor_check ^= recv_data;
 116   3              recv_buf[recv_cnt] = recv_data;
C51 COMPILER V9.54   UART                                                                  02/18/2022 23:59:48 PAGE 3   

 117   3              if (recv_cnt == recv_length)
 118   3              {
 119   4                machine_step = 5;
 120   4              }
 121   3              else
 122   3              {
 123   4                machine_step = 4;
 124   4              }
 125   3              recv_cnt++;
 126   3              break;
 127   3            case 5:
 128   3              if (sum_check == recv_data)//和校验正确
 129   3              {
 130   4                machine_step = 6;
 131   4              }
 132   3              else
 133   3              {
 134   4                machine_step = 0;
 135   4                for (i = 0; i < 6; i++)
 136   4                {
 137   5                  sendByte(sum_check_error[i]);
 138   5                }
 139   4              }
 140   3              break;
 141   3            case 6:
 142   3              if (xor_check == recv_data)//异或校验正确
 143   3              {
 144   4                recv_flag = 1;//正确接收一串数据
 145   4                for (i = 0; i < 6; i++)
 146   4                {
 147   5                  sendByte(recv_correct[i]);
 148   5                }
 149   4              }
 150   3              else
 151   3              {
 152   4                for (i = 0; i < 6; i++)
 153   4                {
 154   5                  sendByte(xor_check_error[i]);
 155   5                }
 156   4              }
 157   3              machine_step = 0;
 158   3              recv_cnt = 0;
 159   3              sum_check = 0;
 160   3              xor_check = 0;
 161   3              break;
 162   3            default: break;
 163   3          }
 164   2        }
 165   1        if (TI)
 166   1        {
 167   2          TI = 0;
 168   2        }
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26       6
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.54   UART                                                                  02/18/2022 23:59:48 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
