C51 COMPILER V9.01   MAIN                                                                  05/04/2021 12:30:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\Keil uVision 4 C51版\C51\BIN\C51.EXE ..\Source\main.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Listing
                    -\main.lst) TABS(2) OBJECT(..\Output\main.obj)

line level    source

   1          //51单片机播放音乐库文件
   2          /**************************************************************************
   3             
   4                        SOUND PLAY FOR 51MCU
   5            
   6                            COPYRIGHT (c)   2005 BY JJJ.
   7                                    --  ALL RIGHTS RESERVED  --
   8            
   9             File Name:       SoundPlay.h
  10             Author:          Jiang Jian Jun
  11             Created:         2005/5/16
  12             Modified:    NO
  13             Revision:    1.0
  14            
  15          *******************************************************************************/
  16          
  17          /*说明**************************************************************************
  18           曲谱存贮格式 unsigned char code MusicName{音高，音长，音高，音长...., 0,0};  末尾:0,0 表示结束(Important)
  19          
  20           音高由三位数字组成：
  21              个位是表示 1~7 这七个音符 
  22              十位是表示音符所在的音区:1-低音，2-中音，3-高音;
  23              百位表示这个音符是否要升半音: 0-不升，1-升半音。
  24           
  25           音长最多由三位数字组成： 
  26              个位表示音符的时值，其对应关系是： 
  27                |数值(n):  |0 |1 |2 |3 | 4 | 5 | 6 
  28                |几分音符: |1 |2 |4 |8 |16 |32 |64    音符=2^n
  29              十位表示音符的演奏效果(0-2):  0-普通，1-连音，2-顿音
  30              百位是符点位: 0-无符点，1-有符点
  31          
  32           调用演奏子程序的格式
  33              Play(乐曲名,调号,升降八度,演奏速度);
  34            |乐曲名           : 要播放的乐曲指针,结尾以(0,0)结束;
  35            |调号(0-11)       : 是指乐曲升多少个半音演奏;
  36            |升降八度(1-3)    : 1:降八度, 2:不升不降, 3:升八度;
  37            |演奏速度(1-12000): 值越大速度越快;
  38          
  39          ***************************************************************************/
  40          #ifndef __SOUNDPLAY_H_REVISION_FIRST__
  41          #define __SOUNDPLAY_H_REVISION_FIRST__
  42          
  43          #include <REGX51.H>
  44          
  45          //**************************************************************************
  46          
  47          #define SYSTEM_OSC    11059200//12000000  //定义晶振频率12000000HZ
  48          #define SOUND_SPACE   4/5     //定义普通音符演奏的长度分率,//每4分音符间隔
  49          sbit    BeepIO    =     P3^7;   //定义输出管脚
  50          
  51          unsigned int  code FreTab[12]  = { 262,277,294,311,330,349,369,392,415,440,466,494 }; //原始频率表
  52          unsigned char code SignTab[7]  = { 0,2,4,5,7,9,11 };                  //1~7在频率表中的位置
  53          unsigned char code LengthTab[7]= { 1,2,4,8,16,32,64 };            
  54          unsigned char Sound_Temp_TH0,Sound_Temp_TL0;  //音符定时器初值暂存 
C51 COMPILER V9.01   MAIN                                                                  05/04/2021 12:30:42 PAGE 2   

  55          unsigned char Sound_Temp_TH1,Sound_Temp_TL1;  //音长定时器初值暂存
  56          //**************************************************************************
  57          void InitialSound(void)
  58          {
  59   1        BeepIO = 1;
  60   1        Sound_Temp_TH1 = (65535-(1/1200)*SYSTEM_OSC)/256; // 计算TL1应装入的初值  (10ms的初装值)
  61   1        Sound_Temp_TL1 = (65535-(1/1200)*SYSTEM_OSC)%256; // 计算TH1应装入的初值 
  62   1        TH1 = Sound_Temp_TH1;
  63   1        TL1 = Sound_Temp_TL1;
  64   1        TMOD  |= 0x11;
  65   1        ET0    = 1;
  66   1        ET1    = 0;
  67   1        TR0    = 0;
  68   1        TR1    = 0;
  69   1        EA     = 1;
  70   1      }
  71          
  72          void BeepTimer0(void) interrupt 1 //音符发生中断
  73          {
  74   1        BeepIO = !BeepIO;
  75   1        TH0    = Sound_Temp_TH0;
  76   1        TL0    = Sound_Temp_TL0;
  77   1      }
  78          //**************************************************************************
  79          void Play(unsigned char *Sound,unsigned char Signature,unsigned Octachord,unsigned int Speed)
  80          {
  81   1        unsigned int NewFreTab[12];   //新的频率表
  82   1        unsigned char i,j;
  83   1        unsigned int Point,LDiv,LDiv0,LDiv1,LDiv2,LDiv4,CurrentFre,Temp_T,SoundLength;
  84   1        unsigned char Tone,Length,SL,SH,SM,SLen,XG,FD;
  85   1        for(i=0;i<12;i++)         // 根据调号及升降八度来生成新的频率表 
  86   1        {
  87   2          j = i + Signature;
  88   2          if(j > 11)
  89   2          {
  90   3            j = j-12;
  91   3            NewFreTab[i] = FreTab[j]*2;
  92   3          }
  93   2          else
  94   2            NewFreTab[i] = FreTab[j];
  95   2      
  96   2          if(Octachord == 1)
  97   2            NewFreTab[i]>>=2;
  98   2          else if(Octachord == 3)
  99   2            NewFreTab[i]<<=2;
 100   2        }                 
 101   1        
 102   1        SoundLength = 0;
 103   1        while(Sound[SoundLength] != 0x00) //计算歌曲长度
 104   1        {
 105   2          SoundLength+=2;
 106   2        }
 107   1      
 108   1        Point = 0;
 109   1        Tone   = Sound[Point];  
 110   1        Length = Sound[Point+1];      // 读出第一个音符和它时时值
 111   1        
 112   1        LDiv0 = 12000/Speed;        // 算出1分音符的长度(几个10ms)  
 113   1        LDiv4 = LDiv0/4;          // 算出4分音符的长度 
 114   1        LDiv4 = LDiv4-LDiv4*SOUND_SPACE;  // 普通音最长间隔标准 
 115   1        TR0   = 0;
 116   1        TR1   = 1;
C51 COMPILER V9.01   MAIN                                                                  05/04/2021 12:30:42 PAGE 3   

 117   1        while(Point < SoundLength)
 118   1        {
 119   2          SL=Tone%10;                 //计算出音符 
 120   2          SM=Tone/10%10;                //计算出高低音 
 121   2          SH=Tone/100;                //计算出是否升半 
 122   2          CurrentFre = NewFreTab[SignTab[SL-1]+SH];   //查出对应音符的频率  
 123   2          if(SL!=0)
 124   2          {
 125   3            if (SM==1) CurrentFre >>= 2;    //低音 
 126   3            if (SM==3) CurrentFre <<= 2;    //高音
 127   3            Temp_T = 65536-(50000/CurrentFre)*10/(12000000/SYSTEM_OSC);//计算计数器初值
 128   3            Sound_Temp_TH0 = Temp_T/256; 
 129   3            Sound_Temp_TL0 = Temp_T%256; 
 130   3            TH0 = Sound_Temp_TH0;  
 131   3            TL0 = Sound_Temp_TL0 + 12; //加12是对中断延时的补偿 
 132   3          }
 133   2          SLen=LengthTab[Length%10];  //算出是几分音符
 134   2          XG=Length/10%10;      //算出音符类型(0普通1连音2顿音) 
 135   2          FD=Length/100;
 136   2          LDiv=LDiv0/SLen;      //算出连音音符演奏的长度(多少个10ms)
 137   2          if (FD==1) 
 138   2            LDiv=LDiv+LDiv/2;
 139   2          if(XG!=1) 
 140   2            if(XG==0)         //算出普通音符的演奏长度 
 141   2              if (SLen<=4)  
 142   2                LDiv1=LDiv-LDiv4;
 143   2              else
 144   2                LDiv1=LDiv*SOUND_SPACE;
 145   2            else
 146   2              LDiv1=LDiv/2;     //算出顿音的演奏长度 
 147   2          else
 148   2            LDiv1=LDiv;
 149   2          if(SL==0) LDiv1=0;
 150   2            LDiv2=LDiv-LDiv1;     //算出不发音的长度 
 151   2            if (SL!=0)
 152   2          {
 153   3            TR0=1;
 154   3            for(i=LDiv1;i>0;i--)  //发规定长度的音 
 155   3            {
 156   4              while(TF1==0);
 157   4              TH1 = Sound_Temp_TH1;
 158   4              TL1 = Sound_Temp_TL1;
 159   4              TF1=0;
 160   4            }
 161   3          }
 162   2          if(LDiv2!=0)
 163   2          {
 164   3            TR0=0; BeepIO=1;
 165   3            for(i=LDiv2;i>0;i--)  //音符间的间隔
 166   3            {
 167   4              while(TF1==0);
 168   4              TH1 = Sound_Temp_TH1;
 169   4              TL1 = Sound_Temp_TL1;
 170   4              TF1=0;
 171   4            }
 172   3          }
 173   2          Point+=2; 
 174   2          Tone=Sound[Point];
 175   2          Length=Sound[Point+1];
 176   2        }
 177   1        BeepIO = 1;
 178   1      }
C51 COMPILER V9.01   MAIN                                                                  05/04/2021 12:30:42 PAGE 4   

 179          //**************************************************************************
 180          #endif
 181          
 182          /***************************************************************************
 183          附:3首曲谱编码表
 184          
 185          //挥着翅膀的女孩
 186          unsigned char code Music_Girl[]={ 0x17,0x02, 0x17,0x03, 0x18,0x03, 0x19,0x02, 0x15,0x03,
 187                                            0x16,0x03, 0x17,0x03, 0x17,0x03, 0x17,0x03, 0x18,0x03,
 188                                            0x19,0x02, 0x16,0x03, 0x17,0x03, 0x18,0x02, 0x18,0x03,
 189                                            0x17,0x03, 0x15,0x02, 0x18,0x03, 0x17,0x03, 0x18,0x02,
 190                                            0x10,0x03, 0x15,0x03, 0x16,0x02, 0x15,0x03, 0x16,0x03,
 191                                            0x17,0x02, 0x17,0x03, 0x18,0x03, 0x19,0x02, 0x1A,0x03,
 192                                            0x1B,0x03, 0x1F,0x03, 0x1F,0x03, 0x17,0x03, 0x18,0x03,
 193                                            0x19,0x02, 0x16,0x03, 0x17,0x03, 0x18,0x03, 0x17,0x03,
 194                                            0x18,0x03, 0x1F,0x03, 0x1F,0x02, 0x16,0x03, 0x17,0x03,
 195                                            0x18,0x03, 0x17,0x03, 0x18,0x03, 0x20,0x03, 0x20,0x02,
 196                                            0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x20,0x03, 0x21,0x03,
 197                                            0x20,0x03, 0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x1F,0x03,
 198                                            0x1B,0x03, 0x19,0x03, 0x19,0x03, 0x15,0x03, 0x1A,0x66,
 199                                            0x1A,0x03, 0x19,0x03, 0x15,0x03, 0x15,0x03, 0x17,0x03,
 200                                            0x16,0x66, 0x17,0x04, 0x18,0x04, 0x18,0x03, 0x19,0x03,
 201                                            0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x20,0x03, 0x21,0x03,
 202                                            0x20,0x03, 0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x1F,0x03,
 203                                            0x1B,0x03, 0x19,0x03, 0x19,0x03, 0x15,0x03, 0x1A,0x66,
 204                                            0x1A,0x03, 0x19,0x03, 0x19,0x03, 0x1F,0x03, 0x1B,0x03,
 205                                            0x1F,0x00, 0x1A,0x03, 0x1A,0x03, 0x1A,0x03, 0x1B,0x03,
 206                                            0x1B,0x03, 0x1A,0x03, 0x19,0x03, 0x19,0x02, 0x17,0x03,
 207                                            0x15,0x17, 0x15,0x03, 0x16,0x03, 0x17,0x03, 0x18,0x03,
 208                                            0x17,0x04, 0x18,0x0E, 0x18,0x03, 0x17,0x04, 0x18,0x0E,
 209                                            0x18,0x66, 0x17,0x03, 0x18,0x03, 0x17,0x03, 0x18,0x03,
 210                                            0x20,0x03, 0x20,0x02, 0x1F,0x03, 0x1B,0x03, 0x1F,0x66,
 211                                            0x20,0x03, 0x21,0x03, 0x20,0x03, 0x1F,0x03, 0x1B,0x03,
 212                                            0x1F,0x66, 0x1F,0x04, 0x1B,0x0E, 0x1B,0x03, 0x19,0x03,
 213                                            0x19,0x03, 0x15,0x03, 0x1A,0x66, 0x1A,0x03, 0x19,0x03,
 214                                            0x15,0x03, 0x15,0x03, 0x17,0x03, 0x16,0x66, 0x17,0x04,
 215                                            0x18,0x04, 0x18,0x03, 0x19,0x03, 0x1F,0x03, 0x1B,0x03,
 216                                            0x1F,0x66, 0x20,0x03, 0x21,0x03, 0x20,0x03, 0x1F,0x03,
 217                                            0x1B,0x03, 0x1F,0x66, 0x1F,0x03, 0x1B,0x03, 0x19,0x03,
 218                                            0x19,0x03, 0x15,0x03, 0x1A,0x66, 0x1A,0x03, 0x19,0x03,
 219                                            0x19,0x03, 0x1F,0x03, 0x1B,0x03, 0x1F,0x00, 0x18,0x02,
 220                                            0x18,0x03, 0x1A,0x03, 0x19,0x0D, 0x15,0x03, 0x15,0x02,
 221                                            0x18,0x66, 0x16,0x02, 0x17,0x02, 0x15,0x00, 0x00,0x00};
 222          //同一首歌
 223          unsigned char code Music_Same[]={ 0x0F,0x01, 0x15,0x02, 0x16,0x02, 0x17,0x66, 0x18,0x03,
 224                                            0x17,0x02, 0x15,0x02, 0x16,0x01, 0x15,0x02, 0x10,0x02,
 225                                            0x15,0x00, 0x0F,0x01, 0x15,0x02, 0x16,0x02, 0x17,0x02,
 226                                            0x17,0x03, 0x18,0x03, 0x19,0x02, 0x15,0x02, 0x18,0x66,
 227                                            0x17,0x03, 0x19,0x02, 0x16,0x03, 0x17,0x03, 0x16,0x00,
 228                                            0x17,0x01, 0x19,0x02, 0x1B,0x02, 0x1B,0x70, 0x1A,0x03,
 229                                            0x1A,0x01, 0x19,0x02, 0x19,0x03, 0x1A,0x03, 0x1B,0x02,
 230                                            0x1A,0x0D, 0x19,0x03, 0x17,0x00, 0x18,0x66, 0x18,0x03,
 231                                            0x19,0x02, 0x1A,0x02, 0x19,0x0C, 0x18,0x0D, 0x17,0x03,
 232                                            0x16,0x01, 0x11,0x02, 0x11,0x03, 0x10,0x03, 0x0F,0x0C,
 233                                            0x10,0x02, 0x15,0x00, 0x1F,0x01, 0x1A,0x01, 0x18,0x66,
 234                                            0x19,0x03, 0x1A,0x01, 0x1B,0x02, 0x1B,0x03, 0x1B,0x03,
 235                                            0x1B,0x0C, 0x1A,0x0D, 0x19,0x03, 0x17,0x00, 0x1F,0x01,
 236                                            0x1A,0x01, 0x18,0x66, 0x19,0x03, 0x1A,0x01, 0x10,0x02,
 237                                            0x10,0x03, 0x10,0x03, 0x1A,0x0C, 0x18,0x0D, 0x17,0x03,
 238                                            0x16,0x00, 0x0F,0x01, 0x15,0x02, 0x16,0x02, 0x17,0x70,
 239                                            0x18,0x03, 0x17,0x02, 0x15,0x03, 0x15,0x03, 0x16,0x66,
 240                                            0x16,0x03, 0x16,0x02, 0x16,0x03, 0x15,0x03, 0x10,0x02,
C51 COMPILER V9.01   MAIN                                                                  05/04/2021 12:30:42 PAGE 5   

 241                                            0x10,0x01, 0x11,0x01, 0x11,0x66, 0x10,0x03, 0x0F,0x0C,
 242                                            0x1A,0x02, 0x19,0x02, 0x16,0x03, 0x16,0x03, 0x18,0x66,
 243                                            0x18,0x03, 0x18,0x02, 0x17,0x03, 0x16,0x03, 0x19,0x00,
 244                                            0x00,0x00 };
 245          //两只蝴蝶                                  
 246          unsigned char code Music_Two[] ={ 0x17,0x03, 0x16,0x03, 0x17,0x01, 0x16,0x03, 0x17,0x03,
 247                                            0x16,0x03, 0x15,0x01, 0x10,0x03, 0x15,0x03, 0x16,0x02,
 248                                            0x16,0x0D, 0x17,0x03, 0x16,0x03, 0x15,0x03, 0x10,0x03,
 249                                            0x10,0x0E, 0x15,0x04, 0x0F,0x01, 0x17,0x03, 0x16,0x03,
 250                                            0x17,0x01, 0x16,0x03, 0x17,0x03, 0x16,0x03, 0x15,0x01,
 251                                            0x10,0x03, 0x15,0x03, 0x16,0x02, 0x16,0x0D, 0x17,0x03,
 252                                            0x16,0x03, 0x15,0x03, 0x10,0x03, 0x15,0x03, 0x16,0x01,
 253                                            0x17,0x03, 0x16,0x03, 0x17,0x01, 0x16,0x03, 0x17,0x03,
 254                                            0x16,0x03, 0x15,0x01, 0x10,0x03, 0x15,0x03, 0x16,0x02,
 255                                            0x16,0x0D, 0x17,0x03, 0x16,0x03, 0x15,0x03, 0x10,0x03,
 256                                            0x10,0x0E, 0x15,0x04, 0x0F,0x01, 0x17,0x03, 0x19,0x03,
 257                                            0x19,0x01, 0x19,0x03, 0x1A,0x03, 0x19,0x03, 0x17,0x01,
 258                                            0x16,0x03, 0x16,0x03, 0x16,0x02, 0x16,0x0D, 0x17,0x03,
 259                                            0x16,0x03, 0x15,0x03, 0x10,0x03, 0x10,0x0D, 0x15,0x00,
 260                                            0x19,0x03, 0x19,0x03, 0x1A,0x03, 0x1F,0x03, 0x1B,0x03,
 261                                            0x1B,0x03, 0x1A,0x03, 0x17,0x0D, 0x16,0x03, 0x16,0x03,
 262                                            0x16,0x0D, 0x17,0x01, 0x17,0x03, 0x17,0x03, 0x19,0x03,
 263                                            0x1A,0x02, 0x1A,0x02, 0x10,0x03, 0x17,0x0D, 0x16,0x03,
 264                                            0x16,0x01, 0x17,0x03, 0x19,0x03, 0x19,0x03, 0x17,0x03,
 265                                            0x19,0x02, 0x1F,0x02, 0x1B,0x03, 0x1A,0x03, 0x1A,0x0E,
 266                                            0x1B,0x04, 0x17,0x02, 0x1A,0x03, 0x1A,0x03, 0x1A,0x0E,
 267                                            0x1B,0x04, 0x1A,0x03, 0x19,0x03, 0x17,0x03, 0x16,0x03,
 268                                            0x17,0x0D, 0x16,0x03, 0x17,0x03, 0x19,0x01, 0x19,0x03,
 269                                            0x19,0x03, 0x1A,0x03, 0x1F,0x03, 0x1B,0x03, 0x1B,0x03,
 270                                            0x1A,0x03, 0x17,0x0D, 0x16,0x03, 0x16,0x03, 0x16,0x03,
 271                                            0x17,0x01, 0x17,0x03, 0x17,0x03, 0x19,0x03, 0x1A,0x02,
 272                                            0x1A,0x02, 0x10,0x03, 0x17,0x0D, 0x16,0x03, 0x16,0x01,
 273                                            0x17,0x03, 0x19,0x03, 0x19,0x03, 0x17,0x03, 0x19,0x03,
 274                                            0x1F,0x02, 0x1B,0x03, 0x1A,0x03, 0x1A,0x0E, 0x1B,0x04,
 275                                            0x17,0x02, 0x1A,0x03, 0x1A,0x03, 0x1A,0x0E, 0x1B,0x04,
 276                                            0x17,0x16, 0x1A,0x03, 0x1A,0x03, 0x1A,0x0E, 0x1B,0x04,
 277                                            0x1A,0x03, 0x19,0x03, 0x17,0x03, 0x16,0x03, 0x0F,0x02,
 278                                            0x10,0x03, 0x15,0x00, 0x00,0x00 };
 279          
 280          ***************************************************************************/
 281          
 282          //两只老虎爱跳舞
 283          unsigned char code Music_TwoTigDance[]={ 0x15,0x02, 0x16,0x02, 0x17,0x02, 0x15,0x02, 0x16,0x02,
 284                                            0x19,0x02, 0x19,0x16, 0x17,0x02, 0x1A,0x03, 0x1A,0x03,
 285                                            0x1A,0x02, 0x1A,0x02, 0x19,0x0D, 0x17,0x03, 0x19,0x02,
 286                                            0x17,0x16, 0x15,0x66, 0x15,0x03, 0x15,0x02, 0x1A,0x03,
 287                                            0x1A,0x03, 0x19,0x02, 0x17,0x02, 0x19,0x16, 0x16,0x03,
 288                                            0x16,0x02, 0x17,0x03, 0x17,0x03, 0x16,0x03, 0x15,0x03,
 289                                            0x17,0x03, 0x16,0x01, 0x0F,0x03, 0x10,0x03, 0x11,0x03,
 290                                            0x16,0x03, 0x15,0x02, 0x16,0x02, 0x17,0x02, 0x15,0x02,
 291                                            0x16,0x02, 0x19,0x03, 0x19,0x03, 0x19,0x16, 0x17,0x02,
 292                                            0x1A,0x02, 0x1A,0x02, 0x1F,0x02, 0x1B,0x02, 0x1A,0x02,
 293                                            0x19,0x16, 0x15,0x66, 0x15,0x03, 0x15,0x02, 0x1A,0x02,
 294                                            0x19,0x02, 0x19,0x02, 0x17,0x16, 0x16,0x03, 0x16,0x02,
 295                                            0x17,0x03, 0x17,0x03, 0x16,0x03, 0x15,0x03, 0x16,0x03,
 296                                            0x15,0x01, 0x15,0x03, 0x16,0x03, 0x17,0x03, 0x19,0x03,
 297                                            0x1F,0x66, 0x1F,0x03, 0x1F,0x03, 0x19,0x03, 0x17,0x03,
 298                                            0x1F,0x03, 0x1B,0x15, 0x17,0x03, 0x1A,0x66, 0x1A,0x03,
 299                                            0x1A,0x03, 0x19,0x03, 0x1A,0x03, 0x1B,0x03, 0x19,0x15,
 300                                            0x17,0x02, 0x19,0x03, 0x19,0x03, 0x19,0x02, 0x1F,0x02,
 301                                            0x20,0x66, 0x20,0x03, 0x1A,0x01, 0x19,0x03, 0x19,0x03,
 302                                            0x19,0x03, 0x1A,0x03, 0x1B,0x03, 0x1A,0x03, 0x1B,0x0D,
C51 COMPILER V9.01   MAIN                                                                  05/04/2021 12:30:42 PAGE 6   

 303                                            0x1F,0x03, 0x20,0x14, 0x19,0x03, 0x1F,0x66, 0x1F,0x03,
 304                                            0x1F,0x03, 0x19,0x03, 0x17,0x03, 0x1F,0x03, 0x1B,0x15,
 305                                            0x17,0x03, 0x1A,0x66, 0x1A,0x03, 0x1A,0x03, 0x19,0x03,
 306                                            0x1A,0x03, 0x1B,0x03, 0x19,0x15, 0x17,0x02, 0x19,0x02,
 307                                            0x19,0x02, 0x1F,0x03, 0x1F,0x03, 0x20,0x03, 0x20,0x03,
 308                                            0x20,0x02, 0x1A,0x01, 0x19,0x03, 0x19,0x03, 0x19,0x03,
 309                                            0x1A,0x03, 0x1B,0x03, 0x1F,0x03, 0x1F,0x03, 0x20,0x03,
 310                                            0x1F,0x00, 0x00,0x00 };
 311          
 312          /******************************
 313          函数名：main
 314          功  能：主函数
 315          参  数：无
 316          返回值：无
 317          ******************************/
 318          void main()
 319          {
 320   1        InitialSound(); 
 321   1        while(1)
 322   1        {
 323   2          Play(Music_TwoTigDance,0,3,350);
 324   2        }
 325   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    765    ----
   CONSTANT SIZE    =    312    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      51
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
