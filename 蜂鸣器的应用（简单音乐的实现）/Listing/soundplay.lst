C51 COMPILER V9.01   SOUNDPLAY                                                             05/04/2021 08:47:41 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SOUNDPLAY
OBJECT MODULE PLACED IN ..\Output\soundplay.obj
COMPILER INVOKED BY: D:\Keil uVision 4 C51版\C51\BIN\C51.EXE ..\Source\soundplay.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Li
                    -sting\soundplay.lst) TABS(2) OBJECT(..\Output\soundplay.obj)

line level    source

   1          #include "soundplay.h"
   2          #include <REGX51.H>
   3          
   4          //**************************************************************************
   5          sbit    BeepIO    =     P3^7;   //定义输出管脚
   6          
   7          unsigned int  code FreTab[12]  = { 262,277,294,311,330,349,369,392,415,440,466,494 }; //原始频率表
   8          unsigned char code SignTab[7]  = { 0,2,4,5,7,9,11 };                  //1~7在频率表中的位置
   9          unsigned char code LengthTab[7]= { 1,2,4,8,16,32,64 };            
  10          unsigned char Sound_Temp_TH0,Sound_Temp_TL0;  //音符定时器初值暂存 
  11          unsigned char Sound_Temp_TH1,Sound_Temp_TL1;  //音长定时器初值暂存
  12          //**************************************************************************
  13          void InitialSound(void)
  14          {
  15   1        BeepIO = 1;
  16   1        Sound_Temp_TH1 = (65535-(1/1200)*SYSTEM_OSC)/256; // 计算TL1应装入的初值  (10ms的初装值)
  17   1        Sound_Temp_TL1 = (65535-(1/1200)*SYSTEM_OSC)%256; // 计算TH1应装入的初值 
  18   1        TH1 = Sound_Temp_TH1;
  19   1        TL1 = Sound_Temp_TL1;
  20   1        TMOD  |= 0x11;
  21   1        ET0    = 1;
  22   1        ET1    = 0;
  23   1        TR0    = 0;
  24   1        TR1    = 0;
  25   1        EA     = 1;
  26   1      }
  27          
  28          void BeepTimer0(void) interrupt 1 //音符发生中断
  29          {
  30   1        BeepIO = !BeepIO;
  31   1        TH0    = Sound_Temp_TH0;
  32   1        TL0    = Sound_Temp_TL0;
  33   1      }
  34          //**************************************************************************
  35          void Play(unsigned char *Sound,unsigned char Signature,unsigned Octachord,unsigned int Speed)
  36          {
  37   1        unsigned int NewFreTab[12];   //新的频率表
  38   1        unsigned char i,j;
  39   1        unsigned int Point,LDiv,LDiv0,LDiv1,LDiv2,LDiv4,CurrentFre,Temp_T,SoundLength;
  40   1        unsigned char Tone,Length,SL,SH,SM,SLen,XG,FD;
  41   1        for(i=0;i<12;i++)         // 根据调号及升降八度来生成新的频率表 
  42   1        {
  43   2          j = i + Signature;
  44   2          if(j > 11)
  45   2          {
  46   3            j = j-12;
  47   3            NewFreTab[i] = FreTab[j]*2;
  48   3          }
  49   2          else
  50   2            NewFreTab[i] = FreTab[j];
  51   2      
  52   2          if(Octachord == 1)
  53   2            NewFreTab[i]>>=2;
  54   2          else if(Octachord == 3)
C51 COMPILER V9.01   SOUNDPLAY                                                             05/04/2021 08:47:41 PAGE 2   

  55   2            NewFreTab[i]<<=2;
  56   2        }                 
  57   1        
  58   1        SoundLength = 0;
  59   1        while(Sound[SoundLength] != 0x00) //计算歌曲长度
  60   1        {
  61   2          SoundLength+=2;
  62   2        }
  63   1      
  64   1        Point = 0;
  65   1        Tone   = Sound[Point];  
  66   1        Length = Sound[Point+1];      // 读出第一个音符和它时时值
  67   1        
  68   1        LDiv0 = 12000/Speed;        // 算出1分音符的长度(几个10ms)  
  69   1        LDiv4 = LDiv0/4;          // 算出4分音符的长度 
  70   1        LDiv4 = LDiv4-LDiv4*SOUND_SPACE;  // 普通音最长间隔标准 
  71   1        TR0   = 0;
  72   1        TR1   = 1;
  73   1        while(Point < SoundLength)
  74   1        {
  75   2          SL=Tone%10;                 //计算出音符 
  76   2          SM=Tone/10%10;                //计算出高低音 
  77   2          SH=Tone/100;                //计算出是否升半 
  78   2          CurrentFre = NewFreTab[SignTab[SL-1]+SH];   //查出对应音符的频率  
  79   2          if(SL!=0)
  80   2          {
  81   3            if (SM==1) CurrentFre >>= 2;    //低音 
  82   3            if (SM==3) CurrentFre <<= 2;    //高音
  83   3            Temp_T = 65536-(50000/CurrentFre)*10/(12000000/SYSTEM_OSC);//计算计数器初值
  84   3            Sound_Temp_TH0 = Temp_T/256; 
  85   3            Sound_Temp_TL0 = Temp_T%256; 
  86   3            TH0 = Sound_Temp_TH0;  
  87   3            TL0 = Sound_Temp_TL0 + 12; //加12是对中断延时的补偿 
  88   3          }
  89   2          SLen=LengthTab[Length%10];  //算出是几分音符
  90   2          XG=Length/10%10;      //算出音符类型(0普通1连音2顿音) 
  91   2          FD=Length/100;
  92   2          LDiv=LDiv0/SLen;      //算出连音音符演奏的长度(多少个10ms)
  93   2          if (FD==1) 
  94   2            LDiv=LDiv+LDiv/2;
  95   2          if(XG!=1) 
  96   2            if(XG==0)         //算出普通音符的演奏长度 
  97   2              if (SLen<=4)  
  98   2                LDiv1=LDiv-LDiv4;
  99   2              else
 100   2                LDiv1=LDiv*SOUND_SPACE;
 101   2            else
 102   2              LDiv1=LDiv/2;     //算出顿音的演奏长度 
 103   2          else
 104   2            LDiv1=LDiv;
 105   2          if(SL==0) LDiv1=0;
 106   2            LDiv2=LDiv-LDiv1;     //算出不发音的长度 
 107   2            if (SL!=0)
 108   2          {
 109   3            TR0=1;
 110   3            for(i=LDiv1;i>0;i--)  //发规定长度的音 
 111   3            {
 112   4              while(TF1==0);
 113   4              TH1 = Sound_Temp_TH1;
 114   4              TL1 = Sound_Temp_TL1;
 115   4              TF1=0;
 116   4            }
C51 COMPILER V9.01   SOUNDPLAY                                                             05/04/2021 08:47:41 PAGE 3   

 117   3          }
 118   2          if(LDiv2!=0)
 119   2          {
 120   3            TR0=0; BeepIO=1;
 121   3            for(i=LDiv2;i>0;i--)  //音符间的间隔
 122   3            {
 123   4              while(TF1==0);
 124   4              TH1 = Sound_Temp_TH1;
 125   4              TL1 = Sound_Temp_TL1;
 126   4              TF1=0;
 127   4            }
 128   3          }
 129   2          Point+=2; 
 130   2          Tone=Sound[Point];
 131   2          Length=Sound[Point+1];
 132   2        }
 133   1        BeepIO = 1;
 134   1      }
 135          //**************************************************************************
 136          
 137          /***************************************************************************
 138          附:曲谱编码表合集
 139          
 140          //挥着翅膀的女孩
 141          unsigned char code Music_Girl[]={ 0x17,0x02, 0x17,0x03, 0x18,0x03, 0x19,0x02, 0x15,0x03,
 142                                            0x16,0x03, 0x17,0x03, 0x17,0x03, 0x17,0x03, 0x18,0x03,
 143                                            0x19,0x02, 0x16,0x03, 0x17,0x03, 0x18,0x02, 0x18,0x03,
 144                                            0x17,0x03, 0x15,0x02, 0x18,0x03, 0x17,0x03, 0x18,0x02,
 145                                            0x10,0x03, 0x15,0x03, 0x16,0x02, 0x15,0x03, 0x16,0x03,
 146                                            0x17,0x02, 0x17,0x03, 0x18,0x03, 0x19,0x02, 0x1A,0x03,
 147                                            0x1B,0x03, 0x1F,0x03, 0x1F,0x03, 0x17,0x03, 0x18,0x03,
 148                                            0x19,0x02, 0x16,0x03, 0x17,0x03, 0x18,0x03, 0x17,0x03,
 149                                            0x18,0x03, 0x1F,0x03, 0x1F,0x02, 0x16,0x03, 0x17,0x03,
 150                                            0x18,0x03, 0x17,0x03, 0x18,0x03, 0x20,0x03, 0x20,0x02,
 151                                            0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x20,0x03, 0x21,0x03,
 152                                            0x20,0x03, 0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x1F,0x03,
 153                                            0x1B,0x03, 0x19,0x03, 0x19,0x03, 0x15,0x03, 0x1A,0x66,
 154                                            0x1A,0x03, 0x19,0x03, 0x15,0x03, 0x15,0x03, 0x17,0x03,
 155                                            0x16,0x66, 0x17,0x04, 0x18,0x04, 0x18,0x03, 0x19,0x03,
 156                                            0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x20,0x03, 0x21,0x03,
 157                                            0x20,0x03, 0x1F,0x03, 0x1B,0x03, 0x1F,0x66, 0x1F,0x03,
 158                                            0x1B,0x03, 0x19,0x03, 0x19,0x03, 0x15,0x03, 0x1A,0x66,
 159                                            0x1A,0x03, 0x19,0x03, 0x19,0x03, 0x1F,0x03, 0x1B,0x03,
 160                                            0x1F,0x00, 0x1A,0x03, 0x1A,0x03, 0x1A,0x03, 0x1B,0x03,
 161                                            0x1B,0x03, 0x1A,0x03, 0x19,0x03, 0x19,0x02, 0x17,0x03,
 162                                            0x15,0x17, 0x15,0x03, 0x16,0x03, 0x17,0x03, 0x18,0x03,
 163                                            0x17,0x04, 0x18,0x0E, 0x18,0x03, 0x17,0x04, 0x18,0x0E,
 164                                            0x18,0x66, 0x17,0x03, 0x18,0x03, 0x17,0x03, 0x18,0x03,
 165                                            0x20,0x03, 0x20,0x02, 0x1F,0x03, 0x1B,0x03, 0x1F,0x66,
 166                                            0x20,0x03, 0x21,0x03, 0x20,0x03, 0x1F,0x03, 0x1B,0x03,
 167                                            0x1F,0x66, 0x1F,0x04, 0x1B,0x0E, 0x1B,0x03, 0x19,0x03,
 168                                            0x19,0x03, 0x15,0x03, 0x1A,0x66, 0x1A,0x03, 0x19,0x03,
 169                                            0x15,0x03, 0x15,0x03, 0x17,0x03, 0x16,0x66, 0x17,0x04,
 170                                            0x18,0x04, 0x18,0x03, 0x19,0x03, 0x1F,0x03, 0x1B,0x03,
 171                                            0x1F,0x66, 0x20,0x03, 0x21,0x03, 0x20,0x03, 0x1F,0x03,
 172                                            0x1B,0x03, 0x1F,0x66, 0x1F,0x03, 0x1B,0x03, 0x19,0x03,
 173                                            0x19,0x03, 0x15,0x03, 0x1A,0x66, 0x1A,0x03, 0x19,0x03,
 174                                            0x19,0x03, 0x1F,0x03, 0x1B,0x03, 0x1F,0x00, 0x18,0x02,
 175                                            0x18,0x03, 0x1A,0x03, 0x19,0x0D, 0x15,0x03, 0x15,0x02,
 176                                            0x18,0x66, 0x16,0x02, 0x17,0x02, 0x15,0x00, 0x00,0x00};
 177          //同一首歌
 178          unsigned char code Music_Same[]={ 0x0F,0x01, 0x15,0x02, 0x16,0x02, 0x17,0x66, 0x18,0x03,
C51 COMPILER V9.01   SOUNDPLAY                                                             05/04/2021 08:47:41 PAGE 4   

 179                                            0x17,0x02, 0x15,0x02, 0x16,0x01, 0x15,0x02, 0x10,0x02,
 180                                            0x15,0x00, 0x0F,0x01, 0x15,0x02, 0x16,0x02, 0x17,0x02,
 181                                            0x17,0x03, 0x18,0x03, 0x19,0x02, 0x15,0x02, 0x18,0x66,
 182                                            0x17,0x03, 0x19,0x02, 0x16,0x03, 0x17,0x03, 0x16,0x00,
 183                                            0x17,0x01, 0x19,0x02, 0x1B,0x02, 0x1B,0x70, 0x1A,0x03,
 184                                            0x1A,0x01, 0x19,0x02, 0x19,0x03, 0x1A,0x03, 0x1B,0x02,
 185                                            0x1A,0x0D, 0x19,0x03, 0x17,0x00, 0x18,0x66, 0x18,0x03,
 186                                            0x19,0x02, 0x1A,0x02, 0x19,0x0C, 0x18,0x0D, 0x17,0x03,
 187                                            0x16,0x01, 0x11,0x02, 0x11,0x03, 0x10,0x03, 0x0F,0x0C,
 188                                            0x10,0x02, 0x15,0x00, 0x1F,0x01, 0x1A,0x01, 0x18,0x66,
 189                                            0x19,0x03, 0x1A,0x01, 0x1B,0x02, 0x1B,0x03, 0x1B,0x03,
 190                                            0x1B,0x0C, 0x1A,0x0D, 0x19,0x03, 0x17,0x00, 0x1F,0x01,
 191                                            0x1A,0x01, 0x18,0x66, 0x19,0x03, 0x1A,0x01, 0x10,0x02,
 192                                            0x10,0x03, 0x10,0x03, 0x1A,0x0C, 0x18,0x0D, 0x17,0x03,
 193                                            0x16,0x00, 0x0F,0x01, 0x15,0x02, 0x16,0x02, 0x17,0x70,
 194                                            0x18,0x03, 0x17,0x02, 0x15,0x03, 0x15,0x03, 0x16,0x66,
 195                                            0x16,0x03, 0x16,0x02, 0x16,0x03, 0x15,0x03, 0x10,0x02,
 196                                            0x10,0x01, 0x11,0x01, 0x11,0x66, 0x10,0x03, 0x0F,0x0C,
 197                                            0x1A,0x02, 0x19,0x02, 0x16,0x03, 0x16,0x03, 0x18,0x66,
 198                                            0x18,0x03, 0x18,0x02, 0x17,0x03, 0x16,0x03, 0x19,0x00,
 199                                            0x00,0x00 };
 200          //两只蝴蝶                                  
 201          unsigned char code Music_Two[] ={ 0x17,0x03, 0x16,0x03, 0x17,0x01, 0x16,0x03, 0x17,0x03,
 202                                            0x16,0x03, 0x15,0x01, 0x10,0x03, 0x15,0x03, 0x16,0x02,
 203                                            0x16,0x0D, 0x17,0x03, 0x16,0x03, 0x15,0x03, 0x10,0x03,
 204                                            0x10,0x0E, 0x15,0x04, 0x0F,0x01, 0x17,0x03, 0x16,0x03,
 205                                            0x17,0x01, 0x16,0x03, 0x17,0x03, 0x16,0x03, 0x15,0x01,
 206                                            0x10,0x03, 0x15,0x03, 0x16,0x02, 0x16,0x0D, 0x17,0x03,
 207                                            0x16,0x03, 0x15,0x03, 0x10,0x03, 0x15,0x03, 0x16,0x01,
 208                                            0x17,0x03, 0x16,0x03, 0x17,0x01, 0x16,0x03, 0x17,0x03,
 209                                            0x16,0x03, 0x15,0x01, 0x10,0x03, 0x15,0x03, 0x16,0x02,
 210                                            0x16,0x0D, 0x17,0x03, 0x16,0x03, 0x15,0x03, 0x10,0x03,
 211                                            0x10,0x0E, 0x15,0x04, 0x0F,0x01, 0x17,0x03, 0x19,0x03,
 212                                            0x19,0x01, 0x19,0x03, 0x1A,0x03, 0x19,0x03, 0x17,0x01,
 213                                            0x16,0x03, 0x16,0x03, 0x16,0x02, 0x16,0x0D, 0x17,0x03,
 214                                            0x16,0x03, 0x15,0x03, 0x10,0x03, 0x10,0x0D, 0x15,0x00,
 215                                            0x19,0x03, 0x19,0x03, 0x1A,0x03, 0x1F,0x03, 0x1B,0x03,
 216                                            0x1B,0x03, 0x1A,0x03, 0x17,0x0D, 0x16,0x03, 0x16,0x03,
 217                                            0x16,0x0D, 0x17,0x01, 0x17,0x03, 0x17,0x03, 0x19,0x03,
 218                                            0x1A,0x02, 0x1A,0x02, 0x10,0x03, 0x17,0x0D, 0x16,0x03,
 219                                            0x16,0x01, 0x17,0x03, 0x19,0x03, 0x19,0x03, 0x17,0x03,
 220                                            0x19,0x02, 0x1F,0x02, 0x1B,0x03, 0x1A,0x03, 0x1A,0x0E,
 221                                            0x1B,0x04, 0x17,0x02, 0x1A,0x03, 0x1A,0x03, 0x1A,0x0E,
 222                                            0x1B,0x04, 0x1A,0x03, 0x19,0x03, 0x17,0x03, 0x16,0x03,
 223                                            0x17,0x0D, 0x16,0x03, 0x17,0x03, 0x19,0x01, 0x19,0x03,
 224                                            0x19,0x03, 0x1A,0x03, 0x1F,0x03, 0x1B,0x03, 0x1B,0x03,
 225                                            0x1A,0x03, 0x17,0x0D, 0x16,0x03, 0x16,0x03, 0x16,0x03,
 226                                            0x17,0x01, 0x17,0x03, 0x17,0x03, 0x19,0x03, 0x1A,0x02,
 227                                            0x1A,0x02, 0x10,0x03, 0x17,0x0D, 0x16,0x03, 0x16,0x01,
 228                                            0x17,0x03, 0x19,0x03, 0x19,0x03, 0x17,0x03, 0x19,0x03,
 229                                            0x1F,0x02, 0x1B,0x03, 0x1A,0x03, 0x1A,0x0E, 0x1B,0x04,
 230                                            0x17,0x02, 0x1A,0x03, 0x1A,0x03, 0x1A,0x0E, 0x1B,0x04,
 231                                            0x17,0x16, 0x1A,0x03, 0x1A,0x03, 0x1A,0x0E, 0x1B,0x04,
 232                                            0x1A,0x03, 0x19,0x03, 0x17,0x03, 0x16,0x03, 0x0F,0x02,
 233                                            0x10,0x03, 0x15,0x00, 0x00,0x00 };
 234          
 235          ***************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    737    ----
   CONSTANT SIZE    =     38    ----
C51 COMPILER V9.01   SOUNDPLAY                                                             05/04/2021 08:47:41 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      51
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
